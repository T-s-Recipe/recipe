name: Build and Deploy Recipe

on:
  push:
    branches:
      - main
      - develop

env:
  CACHE_DIR: ${{ github.workspace }}/.cache

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Create Cache Directory
        run: mkdir -p ${{ env.CACHE_DIR }}

      - name: Build and push Docker image
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            TAG="prod"
          else
            TAG="dev"
          fi
          echo "Using tag: $TAG"

          docker buildx build \
          --build-arg PROFILE=$TAG \
          --build-arg MONGO_URL=${{ secrets.MONGO_URL }} \
          -t ${{ secrets.DOCKER_USERNAME }}/${{ vars.DOCKER_REPO_RECIPE }}:$TAG \
          --push \
          --cache-from "type=local,src=${{ env.CACHE_DIR }}/docker" \
          --cache-to "type=local,dest=${{ env.CACHE_DIR }}/docker,mode=max" \
          .

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Kubernetes rollout restart
        env:
          KUBECONFIG_PATH: ./kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $KUBECONFIG_PATH
          chmod 600 $KUBECONFIG_PATH
          kubectl --kubeconfig=$KUBECONFIG_PATH rollout restart deployment/recipe
          kubectl --kubeconfig=$KUBECONFIG_PATH rollout status deployment/recipe

      - name: Clean Up Docker Resources
        if: always()
        run: |
          echo "Cleaning up Docker to save disk space..."
          docker system prune -af --volumes
          echo "Docker cleanup complete."